#ALLOW_SYSTEM_REQUIRED_LIBS
#ALLOW_BUNDLED_REQUIRED_LIBS
if (DEFINED GLEW_VERSION AND ALLOW_SYSTEM_REQUIRED_LIBS)
	if((TARGET GLEW::GLEW) AND (${GLEW_VERSION} VERSION_GREATER_EQUAL "2.0.0"))
		set(USE_BUNDLED_GLEW false)
	elseif(ALLOW_BUNDLED_REQUIRED_LIBS)
		set(USE_BUNDLED_GLEW true)
	else()
		message(FATAL_ERROR "System GLEW is older than 2.0.0 and bundled GLEW not enabled.")
	endif()
elseif(ALLOW_BUNDLED_REQUIRED_LIBS)
	set(USE_BUNDLED_GLEW true)
else()
	message(FATAL_ERROR "System GLEW not enabled or not found, and bundled GLEW not enabled.")
endif()

if(${USE_BUNDLED_GLEW})
	message(STATUS "- glew - using bundled source")
	add_library(external-glew STATIC "${GLEW_DIR}/src/glew.c")
	target_compile_definitions(external-glew PUBLIC GLEW_STATIC)
	target_include_directories(external-glew SYSTEM PUBLIC ${GLEW_DIR}/include)
	if(TARGET OpenGL::OpenGL)
		target_link_libraries(external-glew PUBLIC OpenGL::OpenGL)
	elseif(TARGET OpenGL::GL)
		target_link_libraries(external-glew PUBLIC OpenGL::GL)
	else()
		message(FATAL_ERROR "OpenGL not found or your CMake version is too old!")
	endif()
	if(TARGET OpenGL::GLX)
		target_link_libraries(external-glew PUBLIC OpenGL::GLX)
	endif()
	set_property(TARGET external-glew PROPERTY FOLDER External)
	target_compile_options(external-glew PRIVATE -w)
else()
	message(STATUS "- glew - using system-provided library")
	add_library(external-glew INTERFACE)
	target_link_libraries(external-glew INTERFACE GLEW::GLEW)
	if(TARGET OpenGL::OpenGL)
		target_link_libraries(external-glew INTERFACE OpenGL::OpenGL)
	elseif(TARGET OpenGL::GL)
		target_link_libraries(external-glew INTERFACE OpenGL::GL)
	else()
		message(FATAL_ERROR "OpenGL not found or your CMake version is too old!")
	endif()
endif()

