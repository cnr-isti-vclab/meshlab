name: 'Deploy'
description: 'Deploy'

inputs:
  mac-certificate:
    description: 'MacOS Certificate'
    required: false
    default: ''
  mac-certificate-id:
    description: 'MacOS Certificate ID'
    required: false
    default: ''
  mac-certificate-pssw:
    description: 'MacOS Certificate Password'
    required: false
  mac-notarization-user:
    description: 'MacOS Notarization User'
    required: false
    default: ''
  mac-notarization-team:
    description: 'MacOS Notarization Team'
    required: false
    default: ''
  mac-notarization-pssw:
    description: 'MacOS Notarization Password'
    required: false
    default: ''
  win-certificate:
    description: 'Windows Certificate'
    required: false
    default: ''
  win-certificate-pssw:
    description: 'Windows Certificate Password'
    required: false
    default: ''
  use-brew-qt:
    description: 'Qt Option'
    required: false
    default: 'false'

runs:
  using: "composite"
  steps:
    - name: Set Notarization settings
      id: envs
      shell: bash
      run: |
        if [ "${{ inputs.use-brew-qt }}" == "true" ]; then
          echo "qt-option=--use_brew_qt" >> $GITHUB_OUTPUT
        else
          echo "qt-option=" >> $GITHUB_OUTPUT
        fi
    - name: Deploy
      shell: bash
      run: |
        bash scripts/${{ runner.os }}/2_deploy.sh ${{ steps.envs.outputs.qt-option }}
    - name: Sign and Notarize
      uses: cnr-isti-vclab/sign-and-notarize@v1
      with:
        input-path: 'install/*.app'
        macos-certificate: '${{ inputs.mac-certificate }}'
        macos-certificate-id: '${{ inputs.mac-certificate-id }}'
        macos-certificate-password: '${{ inputs.mac-certificate-pssw }}'
        macos-notarization-team: '${{ inputs.mac-notarization-team }}'
        macos-notarization-user: '${{ inputs.mac-notarization-user }}'
        macos-notarization-password: '${{ inputs.mac-notarization-pssw }}'
        # windows-certificate: '${{ inputs.win-certificate }}'
        # windows-certificate-password: '${{ inputs.win-certificate-pssw }}'
    - name: DMG
      shell: bash
      if: ${{ runner.os == 'macOS' }}
      run: |
        bash scripts/${{ runner.os }}/3_dmg.sh